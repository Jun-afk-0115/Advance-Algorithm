from Question2_V1 import DirectedGraph
from Question2_V2 import Person, people_profiles


class InGram:
    def __init__(self):
        self.graph = DirectedGraph()

    def add_user(self, person):
        self.graph.addVertex(person)

    def add_edge(self, from_person, to_person):
        self.graph.addEdge(from_person, to_person)

    def get_all_users(self):
        return list(self.graph.adjacency_list.keys())

    def get_followers(self, person):
        return [u for u, v in self.graph.adjacency_list.items() if person in v]

    def get_following(self, person):
        return self.graph.listOutgoingAdjacentVertex(person)

    def view_profile(self, person):
        print("\n==============================")
        print(f"Name: {person.name}")
        print("==============================")
        if person.privacy == "public":
            print(f"Gender: {person.gender}")
            print(f"Biography: {person.biography}")
            print(f"Privacy: {person.privacy.capitalize()}")
        else:
            print("This profile is private.")

    def create_user_profile(self):
        print("\n==============================")
        print("Create New User Profile")
        print("==============================")

        username = input("Enter username: ")
        name = input("Enter full name: ")
        gender = input("Enter gender (Male/Female/Preferred not to say/Other): ")
        biography = input("Enter a short biography: ")
        privacy = input("Privacy setting (Public/Private): ")

        try:
            new_person = Person(username, name, gender, biography, privacy)
            self.add_user(new_person)
            print("Profile successfully created!")
        except ValueError as e:
            print(f"Error creating profile: {e}")


def main():
    app = InGram()

    # Add default test users
    for user in people_profiles:
        app.add_user(user)

    # Create follower relationships
    app.add_edge(people_profiles[2], people_profiles[0])  # TSY -> Hari
    app.add_edge(people_profiles[3], people_profiles[0])  # Jh -> Hari
    app.add_edge(people_profiles[4], people_profiles[2])  # JS -> TSY

    while True:
        print("\n" + "*" * 50)
        print("Welcome to InGram, Your Social Media App!")
        print("*" * 50)
        print("1. View profiles")
        print("2. View details ")
        print("3. View followers ")
        print("4. View following ")
        print("5. Create new user profile")
        print("6. Quit")
        print("*" * 50)

        choice = input("Enter your choice (1 - 6): ")

        if choice == "1":
            print("\n==============================")
            print("View ALL Profile Names:")
            print("==============================")
            for i, user in enumerate(app.get_all_users(), 1):
                print(f"{i}.) {user.name}")

        elif choice == "2":
            users_list = app.get_all_users()
            for i, user in enumerate(users_list, 1):
                print(f"{i}.) {user.name}")
            try:
                idx = int(input("Select profile to view (1 - 5): "))
                if 1 <= idx <= len(users_list):
                    app.view_profile(users_list[idx - 1])
            except:
                print("Invalid input.")

        elif choice == "3":
            users_list = app.get_all_users()
            for i, user in enumerate(users_list, 1):
                print(f"{i}.) {user.name}")
            try:
                idx = int(input("Select profile to view followers (1 - 5): "))
                if 1 <= idx <= len(users_list):
                    selected_user = users_list[idx - 1]
                    if selected_user.privacy.lower() == "private":
                        print("\nThis profile is private.")
                    else:
                        followers = app.get_followers(selected_user)
                        print("\nFollower List:")
                        if followers:
                            for f in followers:
                                print(f"- {f.name}")
                        else:
                            print("No followers yet.")
            except:
                print("Invalid input.")


        elif choice == "4":
            users_list = app.get_all_users()
            for i, user in enumerate(users_list, 1):
                print(f"{i}.) {user.name}")
            try:
                idx = int(input("Select profile to view followings (1 - 5): "))
                if 1 <= idx <= len(users_list):
                    selected_user = users_list[idx - 1]
                    if selected_user.privacy.lower() == "private":
                        print("\nThis profile is private.")
                    else:
                        followings = app.get_following(selected_user)
                        print("\nFollowing List:")
                        if followings:
                            for f in followings:
                                print(f"- {f.name}")
                        else:
                            print("Not following anyone.")
            except:
                print("Invalid input.")


        elif choice == "5":
            app.create_user_profile()

        elif choice == "6":
            print("Thank you for using InGram!")
            break

        else:
            print("Invalid choice. Try again.")


if __name__ == "__main__":
    main()
